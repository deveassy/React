3/26 공부노트

1. input태그의 사용법
 <input> 태그의 value 속성은 <input> 요소의 초깃값을 명시
 value 속성은 <input> 요소의 type 속성값에 따라 다른 용도로 사용
- “button”, “reset”, “submit” : 버튼 내의 텍스트를 정의
- “hidden”, “password”, “text” : 입력 필드의 초깃값을 정의
- “checkbox”, “image”, “radio” : 해당 입력 필드를 선택 시 서버로 제출되는 값을 정의

또한, <input> 요소의 type 속성값이 “file”인 경우에는 value 속성을 사용할 수 없습니다.






4. material-ui
 
5. (react) Functional Component
 - Class형 : 리액트의 기능을 풀로 사용가능, 하지만 클래스의 문법을 다 알아야 함
	-> render함수 / 메소드를 정의하여 그 Return값이 ui가 되는 것
	-> 부모컴퍼넌트에서 props로 값을 받아 사용할 경우 'this.props'를 사용
class ClassComp extends React.Component {
  render() {
    return(
      <div className="App">
        <h2>Class Style Component</h2>
      </div>
    );
  }
}

	-> state값을 변경할 경우, this.setState를 통하여서 state값이 변경되면 render함수가 다시 호출되면서 바뀐 결과가 반영됨





 - 함수형 : 함수의 문법만 알면 가능, 하지만 기능이 부족
	-> state와 life cycle API를 사용하지 못하고 상위컴포넌트가 시키는 일만 처리 가능
	-> 최신에 'hook'이라는 기능으로 내부적으로 상태를 다루는 것이 가능해짐, 라이프싸이클에 대한 정리도 가능해짐 -> 클래스방식의 기능을  
	-> 자기 자신이 render함수이기 때문에 return값만 있으면 됨
	-> 부모컴퍼넌트에서 props로 값을 받아 사용할 경우, 함수를 리엑트가 호출 할 때 첫번째 파라미터의 인자값으로 전달된 props값을 전달하도록 약속되어있음 -> 이때 props의 값은 그저 변수의 이름일 뿐, 꼭 props로 쓰지 않아도 됨
function FuncComp() {
  return(
    <div className="App">
      <h2>Funtion Style Component</h2>
    </div>
  );
}
	-> state의 기능을 사용하기 위한 hook사용법 : React.useState호출 = import React, {useState} from 'react'



*****  https://velopert.com/3480 *****  - 투두리스트 만들기 실습
