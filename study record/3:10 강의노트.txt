3/10 강의노트

1. state
  - props와의 차이점 : props는 컴포넌트를 사용하는 '사용자' 입장에서 조작하는 장치
   		    state는 props의 값에 따라 '내부 구현'에 필요한 데이터들
  - props 는 부모 컴포넌트가 자식 컴포넌트에게 주는 값
	자식 컴포넌트에서는 props 를 받아오기만하고, 받아온 props 를 직접 수정 할 수 없음
  - 자신이 받아온 props 값은 this. 키워드를 통하여 조회 가능
	반면에 state 는 컴포넌트 내부에서 선언하며 내부에서 값을 변경이 가능
  - 두가지는 철저하게 분리되어 있어야 함 
  - component 안에서 render이하의 코드를 실행시키기 이전에 그 component를 '초기화' 시키기 위한 코드는 
	construtor(props){
	 super(props); }
	이 다음에 this.state = {} 를 사용하면 state값을 초기화 시켜줌

  * react에서는 ''사이에 들어온 데이터들을 문자로 인식. 
	코드 작성시에는 {}를 사용해주어야 함
  * ⌘ 를 누르고 각 component에 커서를 올리면 개별의 파일로 이동 가능

  - key : 여러개의 element들을 자동으로 실행하게 되면 에러가 발생하기 때문에 각각의 목록을 구분할 수 있는 식별자를
	사용하여 에러를 방지 -> 리액트 내부에서  필요한 코드
  - react에서는 state나 props의 값이 변경되면 해당되는 component의 render함수가 호출되도록 약속되어있음
    -> props나 state가 변경되면 화면이 다시 그려짐
  - event : camelCase 사용
  - setState : state가 바뀌었다는 것을 세팅해줌 | state가 바뀔 경우 꼭 사용해주어야 함
    -> 그대로 사용할 경우 react가 변경되었다는 것을 인식하지 못함
	constructor를 사용할 경우에는 그대로 사용해도 됨
  - .bind(this) : 정의되지 않은 this로 인한 에러방지하기 위한 코드
    ->정의 찾아두기...

 2. event
  - onChangePage : component안에 event가 있을 경우, component안에 있는 링크를 클릭하게 될 때(이벤트가 일어날 때) evevt안에 있는 함수를 호출하기 위해 만들어짐
  - evevt를 받기 위해서는 해당 컴포넌트에서의 적용이 필요함
  - bind(this, **) : bind의 두번째 인자값은 해당하는 함수의 첫번째 매개변수의 값으로 대입될 수 있음 (예로, bind에 숫자를 넣어주면 해당하는 함수에 num이라는 매개변수를 입력-기존에 있던 함수의 변수는 뒤로 밀려남)